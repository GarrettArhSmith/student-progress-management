{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joeylehrman/Desktop/dev/student-progress-management/client/src/components/pages/Groups.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography, Grid, Paper, makeStyles } from '@material-ui/core';\nimport BreadcrumbNav from '../layout/BreadcrumbNav';\nimport { GroupContext } from '../../context/GroupProvider';\nimport { StudentContext } from '../../context/StudentProvider';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center'\n  },\n  subPaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.background.subPaper,\n    margin: \"20px 0\",\n    transition: \"0.2s ease\",\n    '&:hover': {\n      transform: \"scale(1.01)\",\n      border: `1px solid ${theme.palette.background.subPaperHover}` // backgroundColor: theme.palette.background.subPaperHover\n\n    }\n  },\n  subtitle: {\n    color: \"#adb0bb\",\n    fontSize: \"0.85em\"\n  },\n  link: {\n    textDecoration: \"none\"\n  }\n}));\n\nfunction Groups(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    groups,\n    getAllGroups\n  } = useContext(GroupContext);\n  const {\n    students,\n    getAllStudents\n  } = useContext(StudentContext);\n  useEffect(() => {\n    getAllGroups();\n    getAllStudents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BreadcrumbNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Student Groups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), groups === null || groups === void 0 ? void 0 : groups.map(group => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12 / groups.length,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: group.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            className: classes.subtitle,\n            children: students.filter(student => student.group === group._id).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), students.map(student => student.group === group._id && /*#__PURE__*/_jsxDEV(Link, {\n            to: `/students/${student._id}`,\n            className: classes.link,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.subPaper,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [student.firstName, \" \", student.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this)\n            }, student._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, group._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Groups, \"LhBxQQS3IoVREuh+Qx2H+UZG6DM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Groups;\nexport default Groups;\n\nvar _c;\n\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"sources":["/Users/joeylehrman/Desktop/dev/student-progress-management/client/src/components/pages/Groups.js"],"names":["React","useContext","useEffect","Link","Typography","Grid","Paper","makeStyles","BreadcrumbNav","GroupContext","StudentContext","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","subPaper","backgroundColor","palette","background","margin","transition","transform","border","subPaperHover","subtitle","color","fontSize","link","textDecoration","Groups","props","classes","groups","getAllGroups","students","getAllStudents","map","group","length","name","filter","student","_id","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Typography, Grid, Paper, makeStyles } from '@material-ui/core'\n\nimport BreadcrumbNav from '../layout/BreadcrumbNav'\nimport { GroupContext } from '../../context/GroupProvider';\nimport { StudentContext } from '../../context/StudentProvider';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    subPaper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        backgroundColor: theme.palette.background.subPaper,\n        margin: \"20px 0\",\n        transition: \"0.2s ease\",\n        '&:hover': {\n            transform: \"scale(1.01)\",\n            border: `1px solid ${theme.palette.background.subPaperHover}`\n            // backgroundColor: theme.palette.background.subPaperHover\n        }\n    },\n    subtitle: {\n        color: \"#adb0bb\",\n        fontSize: \"0.85em\"\n    },\n    link: {\n        textDecoration: \"none\",\n    }\n}));\n\nfunction Groups(props) {\n    const classes = useStyles()\n    const { groups, getAllGroups } = useContext(GroupContext)\n    const { students, getAllStudents } = useContext(StudentContext)\n\n    useEffect(() => {\n        getAllGroups()\n        getAllStudents()\n    }, [])\n\n    return (\n        <div>\n            <BreadcrumbNav />\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h4\">Student Groups</Typography>\n                </Grid>\n                {groups?.map(group => (\n                    <Grid item xs={12} sm={12} md={12/groups.length} key={group._id}>\n                    <Paper className={classes.paper}>\n                        <Typography variant=\"h6\">{group.name}</Typography>\n                        <Typography variant=\"subtitle1\" className={classes.subtitle}>\n                            {students.filter(student => student.group === group._id).length}\n                            </Typography>\n                        {students.map(student => student.group === group._id && (\n                            <Link \n                                to={`/students/${student._id}`}\n                                className={classes.link}\n                            >\n                                <Paper \n                                    key={student._id}\n                                    className={classes.subPaper}\n                                >\n                                    <Typography variant=\"body1\">{student.firstName} {student.lastName}</Typography>\n                                </Paper>\n                            </Link>\n                        ))}\n                    </Paper>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n}\n\nexport default Groups;"]},"metadata":{},"sourceType":"module"}