{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joeylehrman/Desktop/dev/student-progress-management/client/src/components/pages/Groups.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Typography, Grid, Paper, makeStyles } from '@material-ui/core';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport BreadcrumbNav from '../layout/BreadcrumbNav';\nimport { GroupContext } from '../../context/GroupProvider';\nimport { StudentContext } from '../../context/StudentProvider';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center'\n  },\n  subPaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.background.subPaper,\n    margin: \"20px 0\"\n  },\n  subtitle: {\n    color: \"#adb0bb\",\n    fontSize: \"0.85em\"\n  }\n}));\n\nfunction Groups(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    groups,\n    getAllGroups\n  } = useContext(GroupContext);\n  const {\n    students,\n    getAllStudents\n  } = useContext(StudentContext);\n  let studentIndex;\n  useEffect(() => {\n    getAllGroups();\n    getAllStudents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BreadcrumbNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Student Groups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), groups === null || groups === void 0 ? void 0 : groups.map(group => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12 / groups.length,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: group.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), students.map(student => student.group === group._id && /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.subPaper,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [student.firstName, \" \", student.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)\n          }, student._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, group._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Groups, \"LhBxQQS3IoVREuh+Qx2H+UZG6DM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Groups;\nexport default Groups;\n\nvar _c;\n\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"sources":["/Users/joeylehrman/Desktop/dev/student-progress-management/client/src/components/pages/Groups.js"],"names":["React","useContext","useEffect","Typography","Grid","Paper","makeStyles","Droppable","Draggable","BreadcrumbNav","GroupContext","StudentContext","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","subPaper","backgroundColor","palette","background","margin","subtitle","color","fontSize","Groups","props","classes","groups","getAllGroups","students","getAllStudents","studentIndex","map","group","length","name","student","_id","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Typography, Grid, Paper, makeStyles } from '@material-ui/core'\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport BreadcrumbNav from '../layout/BreadcrumbNav'\nimport { GroupContext } from '../../context/GroupProvider';\nimport { StudentContext } from '../../context/StudentProvider';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    subPaper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        backgroundColor: theme.palette.background.subPaper,\n        margin: \"20px 0\"\n    },\n    subtitle: {\n        color: \"#adb0bb\",\n        fontSize: \"0.85em\"\n    }\n}));\n\nfunction Groups(props) {\n    const classes = useStyles()\n    const { groups, getAllGroups } = useContext(GroupContext)\n    const { students, getAllStudents } = useContext(StudentContext)\n    let studentIndex\n\n    useEffect(() => {\n        getAllGroups()\n        getAllStudents()\n    }, [])\n\n    return (\n        <div>\n            <BreadcrumbNav />\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h4\">Student Groups</Typography>\n                </Grid>\n                {groups?.map(group => (\n                    <Grid item xs={12} sm={12} md={12/groups.length} key={group._id}>\n                    <Paper className={classes.paper}>\n                        <Typography variant=\"h6\">{group.name}</Typography>\n                        {students.map(student => student.group === group._id && (\n                            <Paper \n                                key={student._id}\n                                className={classes.subPaper}\n                            >\n                                <Typography variant=\"body1\">{student.firstName} {student.lastName}</Typography>\n                            </Paper>\n                        ))}\n                    </Paper>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n}\n\nexport default Groups;"]},"metadata":{},"sourceType":"module"}