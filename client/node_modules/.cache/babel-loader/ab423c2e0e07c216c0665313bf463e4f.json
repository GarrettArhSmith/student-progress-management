{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joeylehrman/Desktop/dev/student-progress-management/client/src/components/BreadcrumbNav.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { useLocation } from 'react-router-dom';\n\nfunction BreadcrumbNav(props) {\n  _s();\n\n  const pathname = useLocation().pathname;\n  const pathArr = pathname.split(\"/\").filter(x => x);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      \"aria-label\": \"breadcrumb\",\n      children: [pathname.length > 0 ? /*#__PURE__*/_jsxDEV(Link, {\n        color: \"inherit\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), pathArr.map((name, i) => {\n        const upperCaseName = name[0].toUpperCase() + name.substring(1);\n\n        if (i === pathArr.length - 1) {\n          return /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            children: upperCaseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 32\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Link, {\n          color: \"inherit\",\n          children: upperCaseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BreadcrumbNav, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\n_c = BreadcrumbNav;\nexport default BreadcrumbNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"BreadcrumbNav\");","map":{"version":3,"sources":["/Users/joeylehrman/Desktop/dev/student-progress-management/client/src/components/BreadcrumbNav.js"],"names":["React","Breadcrumbs","Link","Typography","useLocation","BreadcrumbNav","props","pathname","pathArr","split","filter","x","length","map","name","i","upperCaseName","toUpperCase","substring"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,UAA5B,QAA8C,mBAA9C;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAMC,QAAQ,GAAGH,WAAW,GAAGG,QAA/B;AACA,QAAMC,OAAO,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoBC,MAApB,CAA2BC,CAAC,IAAIA,CAAhC,CAAhB;AAEA,sBACI;AAAA,2BACI,QAAC,WAAD;AAAa,oBAAW,YAAxB;AAAA,iBACSJ,QAAQ,CAACK,MAAT,GAAkB,CAAlB,gBACD,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,gBAID,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALR,EAQKJ,OAAO,CAACK,GAAR,CAAY,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB,cAAMC,aAAa,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,WAAR,KAAwBH,IAAI,CAACI,SAAL,CAAe,CAAf,CAA9C;;AACA,YAAGH,CAAC,KAAKP,OAAO,CAACI,MAAR,GAAe,CAAxB,EAA2B;AACvB,8BAAO,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,aAAlB;AAAA,sBACFI;AADE;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGH;;AACD,4BAAO,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAA,oBACFA;AADE;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGH,OAVA,CARL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA5BQX,a;UACYD,W;;;KADZC,a;AA8BT,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { Breadcrumbs, Link, Typography } from '@material-ui/core'\nimport { useLocation } from 'react-router-dom'\n\nfunction BreadcrumbNav(props) {\n    const pathname = useLocation().pathname\n    const pathArr = pathname.split(\"/\").filter(x => x)\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                    {pathname.length > 0 ? \n                    <Link color=\"inherit\">\n                        Dashboard\n                    </Link> :\n                    <Typography color=\"textPrimary\">\n                        Dashboard\n                    </Typography>}\n                {pathArr.map((name, i) => {\n                    const upperCaseName = name[0].toUpperCase() + name.substring(1)\n                    if(i === pathArr.length-1) {\n                        return <Typography color=\"textPrimary\">\n                            {upperCaseName}\n                        </Typography>\n                    }\n                    return <Link color=\"inherit\">\n                        {upperCaseName}\n                    </Link>\n                })}\n            </Breadcrumbs>\n        </div>\n    );\n}\n\nexport default BreadcrumbNav;"]},"metadata":{},"sourceType":"module"}