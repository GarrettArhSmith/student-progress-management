{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joeylehrman/Desktop/dev/student-progress-management/client/src/components/SideDrawer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Drawer, Toolbar, List, ListItem, ListItemText, ListItemIcon, makeStyles } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport GroupIcon from '@material-ui/icons/Group';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    marginTop: 64,\n    width: drawerWidth\n  },\n  toolbar: {\n    padding: 0\n  },\n  list: {\n    width: drawerWidth\n  },\n  listItem: {\n    textDecoration: \"none\",\n    '&:hover': {\n      backgroundColor: \"rgba(0,0,0,0.15)\"\n    }\n  },\n  icon: {},\n  active: {\n    color: \"purple\"\n  }\n}));\n\nfunction SideDrawer(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    push,\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const list1 = [{\n    text: 'Dashboard',\n    path: \"/\",\n    icon: /*#__PURE__*/_jsxDEV(DashboardIcon, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 46\n    }, this)\n  }, {\n    text: 'Groups',\n    path: \"/groups\",\n    icon: /*#__PURE__*/_jsxDEV(GroupIcon, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 49\n    }, this)\n  }, {\n    text: 'Progress',\n    path: \"/progress\",\n    icon: /*#__PURE__*/_jsxDEV(TimelineIcon, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 53\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      anchor: 'left',\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: classes.list,\n          children: list1.map(item => {\n            const {\n              text,\n              path,\n              icon\n            } = item;\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              onClick: () => push(path),\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: text,\n                classes: pathname === path && classes.active\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)]\n            }, text, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SideDrawer, \"pB+hPQ/BpUhjCRsmLQq/sPp3hss=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = SideDrawer;\nexport default SideDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideDrawer\");","map":{"version":3,"sources":["/Users/joeylehrman/Desktop/dev/student-progress-management/client/src/components/SideDrawer.js"],"names":["React","useHistory","Drawer","Toolbar","List","ListItem","ListItemText","ListItemIcon","makeStyles","DashboardIcon","GroupIcon","TimelineIcon","drawerWidth","useStyles","theme","drawer","width","flexShrink","drawerPaper","marginTop","toolbar","padding","list","listItem","textDecoration","backgroundColor","icon","active","color","SideDrawer","props","classes","push","location","pathname","list1","text","path","paper","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { Drawer, Toolbar, List, ListItem, ListItemText, ListItemIcon, makeStyles } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport GroupIcon from '@material-ui/icons/Group';\nimport TimelineIcon from '@material-ui/icons/Timeline';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n        drawerPaper: {\n        marginTop: 64,\n        width: drawerWidth,\n    },\n    toolbar: {\n        padding: 0,\n    },\n    list: {\n        width: drawerWidth,\n    },\n    listItem: {\n        textDecoration: \"none\",\n        '&:hover': {\n            backgroundColor: \"rgba(0,0,0,0.15)\"\n        }\n    },\n    icon: {\n    },\n    active: {\n        color: \"purple\"\n    }\n}));\n  \n\nfunction SideDrawer(props) {\n    const classes = useStyles()\n    const { push, location: { pathname } } = useHistory()\n\n    const list1 = [\n        {text: 'Dashboard', path: \"/\", icon: <DashboardIcon color=\"secondary\" />},\n        {text: 'Groups', path: \"/groups\", icon: <GroupIcon color=\"secondary\" />},\n        {text: 'Progress', path: \"/progress\", icon: <TimelineIcon color=\"secondary\" />}\n    ]\n\n    return (\n        <div>\n            <Drawer\n                variant=\"permanent\"\n                anchor={'left'}\n                classes={{\n                paper: classes.drawerPaper,\n                }}\n            >\n                <Toolbar className={classes.toolbar}>\n                    <List className={classes.list}>\n                        {list1.map(item => {\n                            const { text, path, icon } = item\n                            return (\n                                <ListItem button key={text} onClick={() => push(path)}>\n                                    <ListItemIcon>{icon}</ListItemIcon>\n                                    <ListItemText primary={text} classes={pathname === path && classes.active} />\n                                </ListItem>)\n                        })}\n                    </List>\n                </Toolbar>\n            </Drawer>\n        </div>\n    );\n}\n\nexport default SideDrawer;"]},"metadata":{},"sourceType":"module"}