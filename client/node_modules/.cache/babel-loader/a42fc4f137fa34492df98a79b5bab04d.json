{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joeylehrman/Desktop/dev/student-progress-management/client/src/components/pages/Groups.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Typography, Grid, Paper, makeStyles } from '@material-ui/core';\nimport BreadcrumbNav from '../layout/BreadcrumbNav';\nimport { GroupContext } from '../../context/GroupProvider';\nimport { Droppable } from 'react-beautiful-dnd';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center'\n  },\n  subtitle: {\n    color: \"#adb0bb\",\n    fontSize: \"0.85em\"\n  }\n}));\n\nfunction Groups(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    groups,\n    getAllGroups\n  } = useContext(GroupContext);\n  useEffect(() => {\n    getAllGroups();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BreadcrumbNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Student Groups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), groups === null || groups === void 0 ? void 0 : groups.map(group => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-1\",\n        type: \"PERSON\",\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Grid, {\n          ref: provided.innerRef,\n          style: {\n            backgroundColor: snapshot.isDraggingOver ? 'blue' : 'grey'\n          },\n          ...provided.droppableProps,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"I am a droppable!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, group._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Groups, \"8G8SlYFpzICeyYrTzWnMt5wfsK8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Groups;\nexport default Groups;\n\nvar _c;\n\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"sources":["/Users/joeylehrman/Desktop/dev/student-progress-management/client/src/components/pages/Groups.js"],"names":["React","useContext","useEffect","Typography","Grid","Paper","makeStyles","BreadcrumbNav","GroupContext","Droppable","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","subtitle","color","fontSize","Groups","props","classes","groups","getAllGroups","map","group","provided","snapshot","innerRef","backgroundColor","isDraggingOver","droppableProps","placeholder","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,UAAlC,QAAoD,mBAApD;AAEA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADN;AAEHC,IAAAA,SAAS,EAAE;AAFR,GAJ8B;AAQrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,SADD;AAENC,IAAAA,QAAQ,EAAE;AAFJ;AAR2B,CAAZ,CAAD,CAA5B;;AAcA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACnB,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAM;AAAEc,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA2BxB,UAAU,CAACO,YAAD,CAA3C;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKD,MAJL,aAIKA,MAJL,uBAIKA,MAAM,CAAEE,GAAR,CAAYC,KAAK,iBACd,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,aAAvB;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAA,kBACC,CAACC,QAAD,EAAWC,QAAX,kBACG,QAAC,IAAD;AACA,UAAA,GAAG,EAAED,QAAQ,CAACE,QADd;AAEA,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEF,QAAQ,CAACG,cAAT,GAA0B,MAA1B,GAAmC;AAAtD,WAFP;AAAA,aAGIJ,QAAQ,CAACK,cAHb;AAAA,iCAKA,QAAC,KAAD;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKL,QAAQ,CAACM,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAFJ,SAAwDP,KAAK,CAACQ,GAA9D;AAAA;AAAA;AAAA;AAAA,cADH,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAlCQd,M;UACWX,S;;;KADXW,M;AAoCT,eAAeA,MAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Typography, Grid, Paper, makeStyles } from '@material-ui/core'\n\nimport BreadcrumbNav from '../layout/BreadcrumbNav'\nimport { GroupContext } from '../../context/GroupProvider';\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n    },\n    subtitle: {\n        color: \"#adb0bb\",\n        fontSize: \"0.85em\"\n    }\n}));\n\nfunction Groups(props) {\n    const classes = useStyles()\n    const { groups, getAllGroups } = useContext(GroupContext)\n\n    useEffect(() => {\n        getAllGroups()\n    }, [])\n\n    return (\n        <div>\n            <BreadcrumbNav />\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h4\">Student Groups</Typography>\n                </Grid>\n                {groups?.map(group => (\n                    <Droppable droppableId=\"droppable-1\" type=\"PERSON\" key={group._id}>\n                    {(provided, snapshot) => (\n                        <Grid\n                        ref={provided.innerRef}\n                        style={{ backgroundColor: snapshot.isDraggingOver ? 'blue' : 'grey' }}\n                        {...provided.droppableProps}\n                        >\n                        <Paper>\n                            <h2>I am a droppable!</h2>\n                            {provided.placeholder}\n                        </Paper>\n                        </Grid>\n                    )}\n                    </Droppable>\n                ))}\n            </Grid>\n        </div>\n    );\n}\n\nexport default Groups;"]},"metadata":{},"sourceType":"module"}